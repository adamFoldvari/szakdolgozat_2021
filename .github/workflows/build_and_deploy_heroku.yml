on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-test.txt

      - name: Run database migration
        run: |
          flask db upgrade
        env:
          FLASK_APP: "healthcheck_api"
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432"

      - name: Run tests
        run: |
          python -m pytest
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432"

      - name: Build, publish, deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          heroku container:push -a szakdolgozat-docker-stage web
          heroku container:push release --recursive -a szakdolgozat-docker-stage
          heroku container:release -a szakdolgozat-docker-stage web release
